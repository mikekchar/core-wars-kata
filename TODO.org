* Core Wars Kata
  Can't quite get it done before the end.  But always good to end
  on a failing test.  Until next time!
** Burndown
*** Set the state of the memory
**** TODO {addr}:{val}
     Sets the value at an address
**** TODO {addr}:{val} {val} ...
     Sets many values starting at an address
**** TODO :{val} {val} ...
     Sets many values starting at the last accessed address
*** Inspect running state of the memory
    Since this is a "retro" project, I thought it would be fun
    to implement the command set from the old Apple II
    machine language monitor
**** TODO {addr1}.{addr2}
      Inspect memory from addr1 to addr2
**** TODO [RETURN]
      Display up to 8 locations following the last opened location.
** Backlog
*** Core options
**** TODO Specify Initial core size
**** TODO Specify Initial instruction to load into the whole core
**** TODO Specify that the core has the same state as last run
     Might have to save the state somehow
**** TODO Specify that the core has a random value
*** TODO Create Core Wars virtual machine
    In this section I will write stories for making the virtual
    machine
*** TODO Load a File into the virtual machine
    Thinking about it, I may need to interleave these stories.

** Done
*** Setup
**** DONE Initial failing test
     CLOSED: [2015-11-12 Thu 13:38]
     I think I already did this.
**** DONE Look at the documentation for Core Wars.
     CLOSED: [2015-11-12 Thu 13:43]
     I added the spec to the doc directory.
     Aaarghh... it's HTML.  Let's open another window.
     Not sure if the documentation explains the virtual machine...
     It must somewhere.  Will need to look more closely.
     But I've seen enough to make a rough plan.
*** Interactive mode
**** DONE Add an executable
     CLOSED: [2015-11-16 Mon 12:58]
*** Build the memory core
**** DONE Make a stupid class
     CLOSED: [2015-11-12 Thu 13:53]
**** DONE It needs a size
     CLOSED: [2015-11-13 Fri 10:16]
**** DONE Store things in the memory
     CLOSED: [2015-11-16 Mon 09:42]
     I'm not terribly worried about the data size.  We will fix it
     later.
***** DONE Allocate memory
      CLOSED: [2015-11-16 Mon 09:31]
***** DONE Determine if we should wrap on setting addresses
      CLOSED: [2015-11-16 Mon 09:42]
      i.e. should store(size+1) set the zeroth value?
      There appears to be a concept of "folding" that does this.
      I don't quite understand, but I will defer this until
      we implement addressing modes.
**** DONE accessing memory greater than size should access addr % size
     CLOSED: [2015-11-27 Fri 17:50]
     Good enough for now.  I will add more tests when I implement
     the maximum jump sizes, etc.
**** DONE accessing negative addr should index size - addr - 1
     CLOSED: [2015-11-27 Fri 17:50]
*** Interactive mode
**** DONE Add command switch to enter interactive mode
     CLOSED: [2015-11-17 Tue 14:49]
     No idea how to test drive this.  Let's not.
     WRITE TESTS!!!
     Good enough for now.
**** DONE Add a monitor that can take input
     CLOSED: [2015-11-18 Wed 13:12]
**** DONE Add interactive exit command
     CLOSED: [2015-11-19 Thu 14:26]
     I suppose ctl-D can also exit since it already does that
**** DONE Print error message for unknown commands
     CLOSED: [2015-11-19 Thu 14:43]
     You may have noticed that the Monitor code is sucky.
     I'm waiting until the right time to refactor it.
     Not sure when that will be...
**** DONE Hook up the bin!!!!
     CLOSED: [2015-11-20 Fri 13:53]
**** DONE Allow inputting negative addresses
     CLOSED: [2015-11-27 Fri 17:59]
*** Inspect running state of the memory
**** DONE Create core at the start of the app
     CLOSED: [2015-11-20 Fri 14:08]
**** DONE {addr}
     CLOSED: [2015-11-21 Sat 14:05]
     Inspect one memory location
     I *did* forget something: to test if it works in process()
**** DONE addrs should be referenced in hexadecimal
     CLOSED: [2015-11-26 Thu 17:52]
     The spec doesn't say this, but that's how the Apple II
     monitor works.
**** DONE memory contents should be printed in hex digits
     CLOSED: [2015-11-26 Thu 18:05]
     Sigh... Not great, but it will do for now
     
